services:
  # MySQL Database (same as production)
  mysql:
    image: mysql:8.0
    container_name: go-api-mysql-dev
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: go_api_setup
      MYSQL_USER: api_user
      MYSQL_PASSWORD: api_password
    ports:
      - "3307:3306"
    volumes:
      - mysql_dev_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - api_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
      interval: 10s
      start_period: 40s

  # Go API Server with hot reload
  api:
    image: golang:1.23-alpine
    container_name: go-api-server-dev
    restart: unless-stopped
    ports:
      - "8082:8080"
    environment:
      # Database configuration
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USER: api_user
      DB_PASSWORD: api_password
      DB_NAME: go_api_setup

      # Server configuration
      SERVER_PORT: 8080

      # JWT configuration
      JWT_SECRET: dev-secret-key-not-for-production

      # Application environment
      APP_ENV: development

      # Go configuration
      CGO_ENABLED: 0
      GOOS: linux
    volumes:
      # Mount source code for hot reload
      - .:/app
      # Cache go modules
      - go_modules:/go/pkg/mod
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - api_network
    working_dir: /app
    command: ["sh", "-c", "go mod download && go run cmd/server/main.go"]

  # Optional: MySQL admin interface
  adminer:
    image: adminer:latest
    container_name: go-api-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: mysql
    depends_on:
      - mysql
    networks:
      - api_network

volumes:
  mysql_dev_data:
    driver: local
  go_modules:
    driver: local

networks:
  api_network:
    driver: bridge
